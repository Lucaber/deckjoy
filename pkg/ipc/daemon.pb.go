// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: daemon.proto

package ipc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{0}
}

type SetupJoystickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermissions bool `protobuf:"varint,1,opt,name=userPermissions,proto3" json:"userPermissions,omitempty"`
}

func (x *SetupJoystickRequest) Reset() {
	*x = SetupJoystickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupJoystickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupJoystickRequest) ProtoMessage() {}

func (x *SetupJoystickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupJoystickRequest.ProtoReflect.Descriptor instead.
func (*SetupJoystickRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *SetupJoystickRequest) GetUserPermissions() bool {
	if x != nil {
		return x.UserPermissions
	}
	return false
}

type SetupJoystickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SetupJoystickResponse) Reset() {
	*x = SetupJoystickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupJoystickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupJoystickResponse) ProtoMessage() {}

func (x *SetupJoystickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupJoystickResponse.ProtoReflect.Descriptor instead.
func (*SetupJoystickResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *SetupJoystickResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SetupKeyboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermissions bool `protobuf:"varint,1,opt,name=userPermissions,proto3" json:"userPermissions,omitempty"`
}

func (x *SetupKeyboardRequest) Reset() {
	*x = SetupKeyboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupKeyboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupKeyboardRequest) ProtoMessage() {}

func (x *SetupKeyboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupKeyboardRequest.ProtoReflect.Descriptor instead.
func (*SetupKeyboardRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *SetupKeyboardRequest) GetUserPermissions() bool {
	if x != nil {
		return x.UserPermissions
	}
	return false
}

type SetupKeyboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SetupKeyboardResponse) Reset() {
	*x = SetupKeyboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupKeyboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupKeyboardResponse) ProtoMessage() {}

func (x *SetupKeyboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupKeyboardResponse.ProtoReflect.Descriptor instead.
func (*SetupKeyboardResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{4}
}

func (x *SetupKeyboardResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SetupMouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermissions bool `protobuf:"varint,1,opt,name=userPermissions,proto3" json:"userPermissions,omitempty"`
}

func (x *SetupMouseRequest) Reset() {
	*x = SetupMouseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupMouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupMouseRequest) ProtoMessage() {}

func (x *SetupMouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupMouseRequest.ProtoReflect.Descriptor instead.
func (*SetupMouseRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{5}
}

func (x *SetupMouseRequest) GetUserPermissions() bool {
	if x != nil {
		return x.UserPermissions
	}
	return false
}

type SetupMouseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SetupMouseResponse) Reset() {
	*x = SetupMouseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupMouseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupMouseResponse) ProtoMessage() {}

func (x *SetupMouseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupMouseResponse.ProtoReflect.Descriptor instead.
func (*SetupMouseResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{6}
}

func (x *SetupMouseResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_daemon_proto protoreflect.FileDescriptor

var file_daemon_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x40, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4a, 0x6f, 0x79, 0x73, 0x74, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4a, 0x6f, 0x79, 0x73, 0x74,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x40, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x3d,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x28, 0x0a,
	0x12, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x32, 0xd0, 0x02, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x6b,
	0x4a, 0x6f, 0x79, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x0e, 0x2e, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0e, 0x2e, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x0e, 0x2e, 0x64, 0x65,
	0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x64, 0x65,
	0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4a, 0x6f, 0x79, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x1d,
	0x2e, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4a, 0x6f,
	0x79, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4a, 0x6f, 0x79,
	0x73, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x1d, 0x2e, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4b,
	0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x12,
	0x1a, 0x2e, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4d,
	0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x65,
	0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x63, 0x61, 0x62, 0x65, 0x72,
	0x2f, 0x64, 0x65, 0x63, 0x6b, 0x6a, 0x6f, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x69, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_daemon_proto_rawDescOnce sync.Once
	file_daemon_proto_rawDescData = file_daemon_proto_rawDesc
)

func file_daemon_proto_rawDescGZIP() []byte {
	file_daemon_proto_rawDescOnce.Do(func() {
		file_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_proto_rawDescData)
	})
	return file_daemon_proto_rawDescData
}

var file_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_daemon_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: deckjoy.Empty
	(*SetupJoystickRequest)(nil),  // 1: deckjoy.SetupJoystickRequest
	(*SetupJoystickResponse)(nil), // 2: deckjoy.SetupJoystickResponse
	(*SetupKeyboardRequest)(nil),  // 3: deckjoy.SetupKeyboardRequest
	(*SetupKeyboardResponse)(nil), // 4: deckjoy.SetupKeyboardResponse
	(*SetupMouseRequest)(nil),     // 5: deckjoy.SetupMouseRequest
	(*SetupMouseResponse)(nil),    // 6: deckjoy.SetupMouseResponse
}
var file_daemon_proto_depIdxs = []int32{
	0, // 0: deckjoy.DeckJoyDaemon.Stop:input_type -> deckjoy.Empty
	0, // 1: deckjoy.DeckJoyDaemon.Init:input_type -> deckjoy.Empty
	1, // 2: deckjoy.DeckJoyDaemon.SetupJoystick:input_type -> deckjoy.SetupJoystickRequest
	3, // 3: deckjoy.DeckJoyDaemon.SetupKeyboard:input_type -> deckjoy.SetupKeyboardRequest
	5, // 4: deckjoy.DeckJoyDaemon.SetupMouse:input_type -> deckjoy.SetupMouseRequest
	0, // 5: deckjoy.DeckJoyDaemon.Stop:output_type -> deckjoy.Empty
	0, // 6: deckjoy.DeckJoyDaemon.Init:output_type -> deckjoy.Empty
	2, // 7: deckjoy.DeckJoyDaemon.SetupJoystick:output_type -> deckjoy.SetupJoystickResponse
	4, // 8: deckjoy.DeckJoyDaemon.SetupKeyboard:output_type -> deckjoy.SetupKeyboardResponse
	6, // 9: deckjoy.DeckJoyDaemon.SetupMouse:output_type -> deckjoy.SetupMouseResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_daemon_proto_init() }
func file_daemon_proto_init() {
	if File_daemon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupJoystickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupJoystickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupKeyboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupKeyboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupMouseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupMouseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_daemon_proto_goTypes,
		DependencyIndexes: file_daemon_proto_depIdxs,
		MessageInfos:      file_daemon_proto_msgTypes,
	}.Build()
	File_daemon_proto = out.File
	file_daemon_proto_rawDesc = nil
	file_daemon_proto_goTypes = nil
	file_daemon_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeckJoyDaemonClient is the client API for DeckJoyDaemon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeckJoyDaemonClient interface {
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	SetupJoystick(ctx context.Context, in *SetupJoystickRequest, opts ...grpc.CallOption) (*SetupJoystickResponse, error)
	SetupKeyboard(ctx context.Context, in *SetupKeyboardRequest, opts ...grpc.CallOption) (*SetupKeyboardResponse, error)
	SetupMouse(ctx context.Context, in *SetupMouseRequest, opts ...grpc.CallOption) (*SetupMouseResponse, error)
}

type deckJoyDaemonClient struct {
	cc grpc.ClientConnInterface
}

func NewDeckJoyDaemonClient(cc grpc.ClientConnInterface) DeckJoyDaemonClient {
	return &deckJoyDaemonClient{cc}
}

func (c *deckJoyDaemonClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/deckjoy.DeckJoyDaemon/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deckJoyDaemonClient) Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/deckjoy.DeckJoyDaemon/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deckJoyDaemonClient) SetupJoystick(ctx context.Context, in *SetupJoystickRequest, opts ...grpc.CallOption) (*SetupJoystickResponse, error) {
	out := new(SetupJoystickResponse)
	err := c.cc.Invoke(ctx, "/deckjoy.DeckJoyDaemon/SetupJoystick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deckJoyDaemonClient) SetupKeyboard(ctx context.Context, in *SetupKeyboardRequest, opts ...grpc.CallOption) (*SetupKeyboardResponse, error) {
	out := new(SetupKeyboardResponse)
	err := c.cc.Invoke(ctx, "/deckjoy.DeckJoyDaemon/SetupKeyboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deckJoyDaemonClient) SetupMouse(ctx context.Context, in *SetupMouseRequest, opts ...grpc.CallOption) (*SetupMouseResponse, error) {
	out := new(SetupMouseResponse)
	err := c.cc.Invoke(ctx, "/deckjoy.DeckJoyDaemon/SetupMouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeckJoyDaemonServer is the server API for DeckJoyDaemon service.
type DeckJoyDaemonServer interface {
	Stop(context.Context, *Empty) (*Empty, error)
	Init(context.Context, *Empty) (*Empty, error)
	SetupJoystick(context.Context, *SetupJoystickRequest) (*SetupJoystickResponse, error)
	SetupKeyboard(context.Context, *SetupKeyboardRequest) (*SetupKeyboardResponse, error)
	SetupMouse(context.Context, *SetupMouseRequest) (*SetupMouseResponse, error)
}

// UnimplementedDeckJoyDaemonServer can be embedded to have forward compatible implementations.
type UnimplementedDeckJoyDaemonServer struct {
}

func (*UnimplementedDeckJoyDaemonServer) Stop(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedDeckJoyDaemonServer) Init(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedDeckJoyDaemonServer) SetupJoystick(context.Context, *SetupJoystickRequest) (*SetupJoystickResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupJoystick not implemented")
}
func (*UnimplementedDeckJoyDaemonServer) SetupKeyboard(context.Context, *SetupKeyboardRequest) (*SetupKeyboardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupKeyboard not implemented")
}
func (*UnimplementedDeckJoyDaemonServer) SetupMouse(context.Context, *SetupMouseRequest) (*SetupMouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupMouse not implemented")
}

func RegisterDeckJoyDaemonServer(s *grpc.Server, srv DeckJoyDaemonServer) {
	s.RegisterService(&_DeckJoyDaemon_serviceDesc, srv)
}

func _DeckJoyDaemon_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeckJoyDaemonServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deckjoy.DeckJoyDaemon/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeckJoyDaemonServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeckJoyDaemon_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeckJoyDaemonServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deckjoy.DeckJoyDaemon/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeckJoyDaemonServer).Init(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeckJoyDaemon_SetupJoystick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupJoystickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeckJoyDaemonServer).SetupJoystick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deckjoy.DeckJoyDaemon/SetupJoystick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeckJoyDaemonServer).SetupJoystick(ctx, req.(*SetupJoystickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeckJoyDaemon_SetupKeyboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupKeyboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeckJoyDaemonServer).SetupKeyboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deckjoy.DeckJoyDaemon/SetupKeyboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeckJoyDaemonServer).SetupKeyboard(ctx, req.(*SetupKeyboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeckJoyDaemon_SetupMouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupMouseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeckJoyDaemonServer).SetupMouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deckjoy.DeckJoyDaemon/SetupMouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeckJoyDaemonServer).SetupMouse(ctx, req.(*SetupMouseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeckJoyDaemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deckjoy.DeckJoyDaemon",
	HandlerType: (*DeckJoyDaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stop",
			Handler:    _DeckJoyDaemon_Stop_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _DeckJoyDaemon_Init_Handler,
		},
		{
			MethodName: "SetupJoystick",
			Handler:    _DeckJoyDaemon_SetupJoystick_Handler,
		},
		{
			MethodName: "SetupKeyboard",
			Handler:    _DeckJoyDaemon_SetupKeyboard_Handler,
		},
		{
			MethodName: "SetupMouse",
			Handler:    _DeckJoyDaemon_SetupMouse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "daemon.proto",
}
